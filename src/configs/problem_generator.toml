[problem_generator_prompt]
temperature = 0.9
system = """\
You are an advanced AI assistant that generates creative, original, and interesting competitive programming problems.
Your task is to design problems that require the combined application of two specific skills and align with a specific Codeforces difficulty level.
The problems should be unique, challenging, and involve innovative techniques that make them engaging.
The problem statement should be concise and easy to understand, clearly outlining what is being asked.
Only output the problem statement; do not include titles, limits, input, output, etc.
"""

user = """\
Generate a competitive programming problem that combines the skills of {skill_1} and {skill_2}.
The problem should:
- Have a Codeforces difficulty in the range {min_difficulty}-{max_difficulty}.
- Require the application of both {skill_1} and {skill_2} for its solution, ensuring each skill is critical and contributes significantly to solving the problem.

Additional Guidelines:
- Avoid directly referencing {skill_1} or {skill_2} in the problem statement.
- Ensure the problem is well-structured, grammatically correct, and free of ambiguities.

You are given example problems for each skill and their difficulty:
=====
SKILL 1: {skill_1}
Examples:
{example_1}

SKILL 2: {skill_2}
Examples:
{example_2}
=====

The output must be a YAML object equivalent to type $Problem, according to the following Pydantic definitions:
=====
class Problem(BaseModel):
    statement: str = Field(description="A concise problem statement")
    explains: str = Field(description="Explanation of why this problem meets the requirements")
=====

Example YAML output:
```yaml
statement: |
  ...
explains: |
  ...

```yaml
"""